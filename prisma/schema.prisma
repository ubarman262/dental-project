// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

model Patient {
  patient_id   String        @id @default(uuid())
  first_name   String
  last_name    String
  email        String?
  phone_number String
  age          Int
  created_date DateTime      @default(now()) @updatedAt
  // ...other relevant patient details
  Appointments Appointment[]
  Buckets      Bucket[]
}

model Dentist {
  dentist_id   String        @id @default(uuid())
  first_name   String
  last_name    String
  email        String        @unique
  phone_number String        @unique
  date         DateTime
  // ...other relevant dentist details
  Appointments Appointment[]
}

model Appointment {
  appointment_id   String   @id @default(uuid())
  appointment_date DateTime
  status           String
  // ...other appointment details
  patient_id       String
  dentist_id       String?
  patient          Patient  @relation(fields: [patient_id], references: [patient_id])
  dentist          Dentist?  @relation(fields: [dentist_id], references: [dentist_id])
} 

model Bucket {
  id         String  @id @default(uuid())
  uri        String
  patient    Patient @relation(fields: [patient_id], references: [patient_id])
  patient_id String
}

model User {
  id       String  @id @default(uuid())
  username String  @unique
  password String
  role     Role?   @relation(fields: [roleId], references: [id])
  roleId   String?
}

model Role {
  id    String @id @default(uuid())
  role  String @unique
  users User[]
}
